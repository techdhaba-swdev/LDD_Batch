        -:    0:Source:selection_sort.c
        -:    1:#include "selection_sort.h" // Include the header file
        -:    2:
function selection_sort called 1 returned 100% blocks executed 100%
        1:    3:void selection_sort(int arr[], size_t n) { // Define selection sort function
        5:    4:    for (size_t i = 0; i < n - 1; i++) { // Loop through the array
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        4:    5:        size_t min_index = i; // Assume the current index has the minimum value
        -:    6:
        -:    7:        // Find the index of the minimum element in the unsorted part of the array
       14:    8:        for (size_t j = i + 1; j < n; j++) {
branch  0 taken 71%
branch  1 taken 29% (fallthrough)
       10:    9:            if (arr[j] < arr[min_index]) {
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        5:   10:                min_index = j; // Update the index of the minimum element
        -:   11:            }
        -:   12:        }
        -:   13:
        -:   14:        // Swap the minimum element with the first element of the unsorted part
        4:   15:        int temp = arr[i];
        4:   16:        arr[i] = arr[min_index];
        4:   17:        arr[min_index] = temp;
        -:   18:    }
        1:   19:}

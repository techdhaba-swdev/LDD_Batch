        -:    0:Source:heapsortmain.c
        -:    1:#include <stdio.h>//This line includes the standard input-output library, which provides functions like printf and scanf
        -:    2:#include "heapsort.h"//This line includes the header file heap_sort.h, which contains the function declaration for heapsort
        -:    3:
        -:    4:#define SIZE 10//This line defines a macro SIZE with the value 10. This macro is used to specify the size of the array to be sorted.
        -:    5:
function main called 1 returned 100% blocks executed 100%
        1:    6:int main() {//This line marks the beginning of the main function, which is the entry point of the program.
        1:    7:    int arr[SIZE] = {12, 11, 13, 5, 6, 7, 2, 14, 3, 9};//This line declares an integer array arr of size SIZE and initializes it with some values. These values represent the elements to be sorted.
        -:    8:
        1:    9:    printf("Original array:\n");// This line prints a message indicating that the array before sorting is being displayed.
call    0 returned 100%
       11:   10:    for (int i = 0; i < SIZE; i++)//This line starts a for loop that iterates through each element of the array.
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
       10:   11:        printf("%d ", arr[i]);//Inside the loop, this line prints each element of the array.
call    0 returned 100%
        1:   12:    printf("\n");//After printing all elements, this line prints a newline character to move to the next line.
call    0 returned 100%
        -:   13:
        1:   14:    heap_sort(arr, SIZE);// This line calls the heap_sort function to sort the array arr of size SIZE using the heap sort algorithm.
call    0 returned 100%
        -:   15:
        1:   16:    printf("Sorted array:\n");//This line prints a message indicating that the array after sorting is being displayed.
call    0 returned 100%
       11:   17:    for (int i = 0; i < SIZE; i++)//This line starts a for loop that iterates through each element of the array.
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
       10:   18:        printf("%d ", arr[i]);//Inside the loop, this line prints each element of the array.
call    0 returned 100%
        1:   19:    printf("\n");//After printing all elements, this line prints a newline character to move to the next line.
call    0 returned 100%
        -:   20:
        -:   21:
        1:   22:    return 0;//This line signifies the successful completion of the main function and returns a status code of 0, indicating that the program executed successfully.
        -:   23:}
        -:   24:

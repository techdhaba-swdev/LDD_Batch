        -:    0:Source:main.c
        -:    1:#include <stdio.h>
        -:    2:#include "binary_tree.h"
        -:    3:
function main called 1 returned 100% blocks executed 100%
        1:    4:int main() {
        1:    5:    struct Node* root = NULL;
        -:    6:    // Insert nodes into the binary tree
        1:    7:    root = insert(root, 50);
call    0 returned 100%
        1:    8:    insert(root, 30);
call    0 returned 100%
        1:    9:    insert(root, 20);
call    0 returned 100%
        1:   10:    insert(root, 40);
call    0 returned 100%
        1:   11:    insert(root, 70);
call    0 returned 100%
        1:   12:    insert(root, 60);
call    0 returned 100%
        1:   13:    insert(root, 80);
call    0 returned 100%
        -:   14:
        -:   15:    // Print in-order traversal of the binary tree
        1:   16:    printf("In-order traversal: ");
call    0 returned 100%
        1:   17:    inOrder(root);
call    0 returned 100%
        1:   18:    printf("\n");
call    0 returned 100%
        -:   19:
        -:   20:    // Calculate the sum of all nodes in the binary tree
        1:   21:    int sum = add(root);
call    0 returned 100%
        1:   22:    printf("Sum of all nodes: %d\n", sum);
call    0 returned 100%
        -:   23:
        -:   24:    // Memory deallocation for the binary tree is not shown here to keep the example simple
        -:   25:
        1:   26:    return 0;
        -:   27:}

        -:    0:Source:main.c
        -:    1:#include "graph.h"//Including the header file for the graph.h 
        -:    2:#include <time.h>
function main called 1 returned 100% blocks executed 100%
        1:    3:int main() {
        -:    4:	clock_t start,end;
        -:    5:	double cpu_time_used;
        -:    6:
        1:    7:    SocialNetwork* network = createSocialNetwork();//creating a new social network
call    0 returned 100%
        -:    8:
        -:    9:    //Measure the time taken by the addUserProfile function
        1:   10:    start=clock();
call    0 returned 100%
        -:   11:
        -:   12:    // Adding user profiles
        1:   13:    addUserProfile(network, "Seetha", "Art, Music");//Adding user profile for seetha with interests
call    0 returned 100%
        1:   14:    addUserProfile(network, "Ram", "Sports, Movies");//Adding user profile for ram with interests
call    0 returned 100%
        1:   15:addUserProfile(network, "Charlie", "Technology, Reading");//Adding user profile for Charlie with interests
call    0 returned 100%
        1:   16:    addUserProfile(network, "Radha", "Gaming, Cooking");//Adding user profile for Radha with interests
call    0 returned 100%
        1:   17:    addUserProfile(network, "Raman", "Travel, Photography");//Adding user profile foe Raman with interests
call    0 returned 100%
        -:   18:							    
        -:   19:
        -:   20:    // Adding friendships
        1:   21:    addFriend(network, "Seetha", "Ram");//seetha become friends with ram
call    0 returned 100%
        1:   22:    addFriend(network, "Seetha", "Charlie");//seetha become friends with charlie
call    0 returned 100%
        1:   23:    addFriend(network, "Seetha", "Radha");//seetha become friends with radha
call    0 returned 100%
        1:   24:    addFriend(network, "Seetha", "Raman");//seetha become friends with raman
call    0 returned 100%
        1:   25:    addFriend(network, "Ram", "Charlie");//ram become friends with charlie
call    0 returned 100%
        1:   26:    addFriend(network, "Ram", "Radha");//ram become friends with radha
call    0 returned 100%
        1:   27:    addFriend(network, "Ram", "Raman");//ram become friends with raman
call    0 returned 100%
        1:   28:    addFriend(network, "Charlie", "Radha");//charlie become friends with radha
call    0 returned 100%
        1:   29:    addFriend(network, "Charlie", "Raman");//charlie become friends with raman
call    0 returned 100%
        -:   30:    //addFriend(network, "Radha", "Raman");//radha become friends with raman 
        -:   31:
        -:   32:    // Displaying friend list
        1:   33:    displayFriendList(network, "Seetha");//displaying seetha's friend list
call    0 returned 100%
        1:   34:    displayFriendList(network, "Ram");//displaying ram's friend list
call    0 returned 100%
        1:   35:    displayFriendList(network, "Charlie");//displaying charlie friend list
call    0 returned 100%
        1:   36:    displayFriendList(network, "Radha");//displaying radha freind list
call    0 returned 100%
        1:   37:    displayFriendList(network, "Raman");//displaying raman friend list
call    0 returned 100%
        -:   38:
        -:   39:    // Recommending friends
        1:   40:    recommendFriends(network, "Seetha");//recommending friends for seetha
call    0 returned 100%
        1:   41:    recommendFriends(network, "Ram");//recommending friends for ram
call    0 returned 100%
        1:   42:    recommendFriends(network, "Charlie");//recommending freinds for charlie
call    0 returned 100%
        1:   43:    recommendFriends(network, "Radha");//recommending friends for radha
call    0 returned 100%
        1:   44:    recommendFriends(network, "Raman");//recommending friends for raman
call    0 returned 100%
        -:   45:
        -:   46:    // More functionality testing...
        1:   47:    end=clock();
call    0 returned 100%
        1:   48:    cpu_time_used=((double)(end-start))/CLOCKS_PER_SEC;
        1:   49:    printf("Total time taken %f seconds to excute.\n",cpu_time_used);
call    0 returned 100%
        -:   50:
        -:   51:
        1:   52:    return 0;//Returning 0 to indicate successful execution.
        -:   53:}

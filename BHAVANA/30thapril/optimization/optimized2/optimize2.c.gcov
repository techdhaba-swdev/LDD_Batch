        -:    0:Source:optimize2.c
        -:    0:Graph:optimized-optimize2.gcno
        -:    0:Data:optimized-optimize2.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:
function main called 1 returned 100% blocks executed 100%
        1:    3:int main() {
        1:    4:        int sum = 0;
        1:    5:        int n = 1000;
        -:    6:       
        -:    7:       	//Original Loop (Less efficient) 
     1001:    8:        for (int i = 0; i < n; i++){
branch  0 taken 100%
branch  1 taken 1% (fallthrough)
     1000:    9:         sum += i;
        -:   10:         }
        -:   11:
        -:   12:        //Unrolled Loop (improves performance for small Loop iterations)
        -:   13:       /* for (int i = 0; i < n; i += 2) {
        -:   14:        sum += i;
        -:   15:        if (i + 1 < n) {
        -:   16:                sum += i + 1;
        -:   17:        }
        -:   18:        }*/
        -:   19:
        1:   20:        printf("Sum: %d\n", sum);
call    0 returned 100%
        1:   21:        return 0;
        -:   22:}

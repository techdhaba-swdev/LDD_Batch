        -:    0:Source:main.c
        -:    1:
        -:    2:#include <stdio.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:#include "BST.h"
        -:    6:
function main called 1 returned 100% blocks executed 100%
        1:    7:int main() {
        1:    8:    struct Node* root = NULL;
        -:    9:    clock_t start, end; // Variables to store start and end time
        -:   10:     double cpu_time_used; //Variables to store CPU time used
        -:   11:     
        -:   12:     //Start clock
        1:   13:     start = clock();
call    0 returned 100%
        -:   14:
        -:   15:    // Insert nodes into the binary tree
        1:   16:    root = insert(root, 50);
call    0 returned 100%
        1:   17:    insert(root, 80);
call    0 returned 100%
        1:   18:    insert(root, 60);
call    0 returned 100%
        1:   19:    insert(root, 40);
call    0 returned 100%
        1:   20:    insert(root, 30);
call    0 returned 100%
        1:   21:    insert(root, 10);
call    0 returned 100%
        1:   22:    insert(root, 90);
call    0 returned 100%
        -:   23:
        -:   24:    // Print in-order traversal of the binary tree
        1:   25:    printf("In-order traversal: ");
call    0 returned 100%
        1:   26:    inOrder(root);
call    0 returned 100%
        1:   27:    printf("\n");
call    0 returned 100%
        -:   28:
        -:   29:
        -:   30:    // Calculate the sum of all nodes in the binary tree
        1:   31:    int sum = add(root);
call    0 returned 100%
        1:   32:    printf("Sum of all nodes: %d\n", sum);
call    0 returned 100%
        -:   33:
        -:   34:    //stop clock
        1:   35:    end = clock();
call    0 returned 100%
        -:   36:   
        -:   37:    //Calculate CPU time used
        1:   38:    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;
        1:   39:    printf("CPU time used: %f seconds\n", cpu_time_used);
call    0 returned 100%
        -:   40:    // Memory deallocation for the binary tree is not shown here to keep the example simple
        -:   41:
        1:   42:    return 0;
        -:   43:}
        -:   44:
        -:   45:

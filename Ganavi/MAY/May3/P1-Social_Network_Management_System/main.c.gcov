        -:    0:Source:main.c
        -:    1:#include "graph.h" // Including the header file for the graph.h 
        -:    2:#include <time.h>
        -:    3:
function main called 1 returned 100% blocks executed 100%
        1:    4:int main() {
        -:    5:    clock_t start, end;
        -:    6:    double cpu_time_used;
        -:    7:
        1:    8:    SocialNetwork* network = createSocialNetwork(); // Creating a new social network
call    0 returned 100%
        -:    9:
        -:   10:    // Measure the time taken by the addUserProfile function
        1:   11:    start = clock();
call    0 returned 100%
        -:   12:
        -:   13:    // Adding user profiles
        1:   14:    addUserProfile(network, "Ganavi", "Art, Music"); // Adding user profile for Ganavi with interests
call    0 returned 100%
        1:   15:    addUserProfile(network, "Bhavya", "Sports, Movies"); // Adding user profile for Bhavya with interests
call    0 returned 100%
        1:   16:    addUserProfile(network, "Akhila", "Technology, Reading"); // Adding user profile for Akhila with interests
call    0 returned 100%
        1:   17:    addUserProfile(network, "Prasanna", "Gaming, Cooking"); // Adding user profile for Prasanna with interests
call    0 returned 100%
        1:   18:    addUserProfile(network, "Ishani", "Travel, Photography"); // Adding user profile for Ishani with interests
call    0 returned 100%
        -:   19:
        -:   20:    // Adding friendships
        1:   21:    addFriend(network, "Ganavi", "Bhavya"); // Ganavi becomes friends with Bhavya
call    0 returned 100%
        1:   22:    addFriend(network, "Ganavi", "Akhila"); // Ganavi becomes friends with Akhila
call    0 returned 100%
        1:   23:    addFriend(network, "Ganavi", "Prasanna"); // Ganavi becomes friends with Prasanna
call    0 returned 100%
        1:   24:    addFriend(network, "Ganavi", "Ishani"); // Ganavi becomes friends with Ishani
call    0 returned 100%
        1:   25:    addFriend(network, "Bhavya", "Akhila"); // Bhavya becomes friends with Akhila
call    0 returned 100%
        1:   26:    addFriend(network, "Bhavya", "Prasanna"); // Bhavya becomes friends with Prasanna
call    0 returned 100%
        1:   27:    addFriend(network, "Bhavya", "Ishani"); // Bhavya becomes friends with Ishani
call    0 returned 100%
        1:   28:    addFriend(network, "Akhila", "Prasanna"); // Akhila becomes friends with Prasanna
call    0 returned 100%
        -:   29:
        -:   30:    // Displaying friend list
        1:   31:    displayFriendList(network, "Ganavi"); // Displaying Ganavi's friend list
call    0 returned 100%
        1:   32:    displayFriendList(network, "Bhavya"); // Displaying Bhavya's friend list
call    0 returned 100%
        1:   33:    displayFriendList(network, "Akhila"); // Displaying Akhila's friend list
call    0 returned 100%
        1:   34:    displayFriendList(network, "Prasanna"); // Displaying Prasanna's friend list
call    0 returned 100%
        1:   35:    displayFriendList(network, "Ishani"); // Displaying Ishani's friend list
call    0 returned 100%
        -:   36:
        -:   37:    // Recommending friends
        1:   38:    recommendFriends(network, "Ganavi"); // Recommending friends for Ganavi
call    0 returned 100%
        1:   39:    recommendFriends(network, "Bhavya"); // Recommending friends for Bhavya
call    0 returned 100%
        1:   40:    recommendFriends(network, "Akhila"); // Recommending friends for Akhila
call    0 returned 100%
        1:   41:    recommendFriends(network, "Prasanna"); // Recommending friends for Prasanna
call    0 returned 100%
        1:   42:    recommendFriends(network, "Ishani"); // Recommending friends for Ishani
call    0 returned 100%
        -:   43:
        -:   44:    // More functionality testing...
        1:   45:    end = clock();
call    0 returned 100%
        1:   46:    cpu_time_used = ((double)(end - start)) / CLOCKS_PER_SEC;
        1:   47:    printf("Total time taken %f seconds to execute.\n", cpu_time_used);
call    0 returned 100%
        -:   48:
        1:   49:    return 0; // Returning 0 to indicate successful execution.
        -:   50:}

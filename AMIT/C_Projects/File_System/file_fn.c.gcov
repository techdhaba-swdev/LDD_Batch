        -:    0:Source:file_fn.c
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include"file.h"
        -:    5:
        -:    6:
        -:    7:// Create a new directory
function createDirectory called 2 returned 100% blocks executed 100%
        2:    8:struct Directory* createDirectory(const char* name) {
        2:    9:    struct Directory* newDir = (struct Directory*)malloc(sizeof(struct Directory));
        2:   10:    strcpy(newDir->name, name);
        2:   11:    newDir->subdirectories = NULL;
        2:   12:    newDir->files = NULL;
        2:   13:    return newDir;
        -:   14:}
        -:   15:
        -:   16:// Create a new file
function createFile called 1 returned 100% blocks executed 100%
        1:   17:struct File* createFile(const char* name) {
        1:   18:    struct File* newFile = (struct File*)malloc(sizeof(struct File));
        1:   19:    strcpy(newFile->name, name);
        1:   20:    newFile->next = NULL;
        1:   21:    return newFile;
        -:   22:}
        -:   23:
        -:   24:// List files and subdirectories in a directory
function listDirectoryContents called 2 returned 100% blocks executed 80%
        2:   25:void listDirectoryContents(const struct Directory* dir) {
        2:   26:    printf("Contents of directory '%s':\n", dir->name);
call    0 returned 100%
        2:   27:    struct File* filePtr = dir->files;
        2:   28:    while (filePtr) {
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
    #####:   29:        printf("File: %s\n", filePtr->name);
call    0 never executed
    #####:   30:        filePtr = filePtr->next;
        -:   31:    }
        2:   32:    struct Directory* subDirPtr = dir->subdirectories;
        3:   33:    while (subDirPtr) {
branch  0 taken 33%
branch  1 taken 67% (fallthrough)
        1:   34:        printf("Subdirectory: %s\n", subDirPtr->name);
call    0 returned 100%
        1:   35:        subDirPtr = subDirPtr->subdirectories;
        -:   36:    }
        2:   37:}
        -:   38:
        -:   39:// Navigate into a subdirectory
function navigateToSubdirectory called 1 returned 100% blocks executed 62%
        1:   40:struct Directory* navigateToSubdirectory(struct Directory* currentDir, const char* subDirName) {
        1:   41:    struct Directory* subDirPtr = currentDir->subdirectories;
        1:   42:    while (subDirPtr) {
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        1:   43:        if (strcmp(subDirPtr->name, subDirName) == 0) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   44:            return subDirPtr;
        -:   45:        }
    #####:   46:        subDirPtr = subDirPtr->subdirectories;
        -:   47:    }
    #####:   48:    printf("Subdirectory '%s' not found.\n", subDirName);
call    0 never executed
    #####:   49:    return NULL;
        -:   50:}
        -:   51:
        -:   52:// Delete a file or directory
function delete called 1 returned 100% blocks executed 73%
        1:   53:void delete(struct Directory* parentDir, const char* name) {
        1:   54:    struct File* filePtr = parentDir->files;
        1:   55:    struct File* prevFile = NULL;
        1:   56:    while (filePtr) {
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        1:   57:        if (strcmp(filePtr->name, name) == 0) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   58:            if (prevFile) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   59:                prevFile->next = filePtr->next;
        -:   60:            } else {
        1:   61:                parentDir->files = filePtr->next;
        -:   62:            }
        1:   63:            free(filePtr);
        1:   64:            printf("File '%s' deleted.\n", name);
call    0 returned 100%
        1:   65:            return;
        -:   66:        }
    #####:   67:        prevFile = filePtr;
    #####:   68:        filePtr = filePtr->next;
        -:   69:    }
    #####:   70:    printf("File '%s' not found.\n", name);
call    0 never executed
        -:   71:}
        -:   72:
        -:   73:// Search for files by name
function searchFilesByName called 1 returned 100% blocks executed 75%
        1:   74:void searchFilesByName(const struct Directory* dir, const char* fileName) {
        1:   75:    struct File* filePtr = dir->files;
        1:   76:    while (filePtr) {
branch  0 taken 100%
branch  1 taken 0% (fallthrough)
        1:   77:        if (strcmp(filePtr->name, fileName) == 0) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   78:            printf("Found file: %s\n", fileName);
call    0 returned 100%
        1:   79:            return;
        -:   80:        }
    #####:   81:        filePtr = filePtr->next;
        -:   82:    }
    #####:   83:    printf("File '%s' not found.\n", fileName);
call    0 never executed
        -:   84:}
        -:   85:

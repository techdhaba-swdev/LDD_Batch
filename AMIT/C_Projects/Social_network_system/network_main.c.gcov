        -:    0:Source:network_main.c
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include<time.h>
        -:    5:#include"network.h"
        -:    6:
function main called 1 returned 100% blocks executed 100%
        1:    7:int main()
        -:    8:{
        1:    9:    clock_t start = clock();
call    0 returned 100%
        -:   10:    // Example usage:
        1:   11:    struct UserProfile* profiles = NULL;
        -:   12:    // Create user profiles (add to linked list)
        1:   13:    struct UserProfile* user1 = createUserProfile("Alice", "Programming, Music");
call    0 returned 100%
        1:   14:    struct UserProfile* user2 = createUserProfile("Bob", "Hiking, Photography");
call    0 returned 100%
        1:   15:    profiles = user1;
        1:   16:    user1->next = user2;
        -:   17:
        -:   18:    // Initialize the graph (add edges for friend connections)
        1:   19:    struct Graph* socialGraph = createGraph(2);
call    0 returned 100%
        1:   20:    addFriend(socialGraph, 0, 1); // Alice and Bob are friends
call    0 returned 100%
        -:   21:
        -:   22:    // Search for users
        1:   23:    searchUsers(profiles, "Programming");
call    0 returned 100%
        1:   24:    searchUsers(profiles, "Hiking");
call    0 returned 100%
        -:   25:
        -:   26:    // Recommend friends for Alice (user ID 0)
        1:   27:    recommendFriends(socialGraph, 0);
call    0 returned 100%
        -:   28:
        -:   29:    // Display friend list
        1:   30:    displayFriendList(socialGraph, 0); // Alice's friend list
call    0 returned 100%
        -:   31:
        1:   32:    clock_t end = clock();
call    0 returned 100%
        1:   33:    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
        1:   34:      printf("Time taken: %f seconds\n", time_taken);
call    0 returned 100%
        -:   35:
        1:   36:    return 0;
        -:   37:}

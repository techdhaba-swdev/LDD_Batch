man 2 open
open(): system call opens the file specified by path name.

synopsis:
#include <sys/stat.h>
#include <fnctl.h>

int open (const *pathname , int flags)
int open (const *pathname , int flags , mode_t mode)

int creat (const char *pathname , mode_t mode);

int openat(const *pathname , int flags)
int openat(const *pathname , int flags , mode_t mode)

a call to open() creates a new open file description and openfile  description records the file offset
 
the flag argument must include one of the following access modes :
O_RDONLY , O_WRONLY , O_RDWR
readonly , writeonly , read write only

O_CREAT - IF PATHNAME DOES NOT EXIST , CREATE IT AS A REGULAR FILE

O_APPEND - opens files in append mode.

before each write the file is offset is opened at the end of file as if with lseek

man 2 write 

write() - write to a file descriptor
#include<unistd.h>
ssize_t write (int fd , const void *buf , size_t count);
write() writes up to count bytes from the buffer starting at buf to the file referred to by the file descriptor fd.

read() - read from a file descriptor
       #include <unistd.h>

       ssize_t read(int fd, void *buf, size_t count);
       read() attempts to read up to count bytes from file descriptor fd into the buffer starting at buf.
      
       close - close a file descriptor

close()
       #include <unistd.h>

       int close(int fd);
       close() closes a file descriptor, so that it no longer refers to any file and may be reused. 



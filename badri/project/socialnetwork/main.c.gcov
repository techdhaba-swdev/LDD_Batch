        -:    0:Source:main.c
        -:    1:#include "profile.h"
        -:    2:#include <time.h> 
function main called 1 returned 100% blocks executed 94%
        1:    3:int main() { // Main function.
        1:    4:	clock_t start = clock();	
call    0 returned 100%
        1:    5:    UserProfile* profiles[26] = { NULL }; // Array of linked lists to store user profiles.
        1:    6:    GraphNode* graph[26] = { NULL }; // Array of linked lists to represent the graph of user connections.
        -:    7:
        1:    8:    UserProfile* user1 = createProfile("Alice", "Reading, Traveling"); // Creating a user profile for Alice.
call    0 returned 100%
        1:    9:    UserProfile* user2 = createProfile("Bob", "Photography, Cooking"); // Creating a user profile for Bob.
call    0 returned 100%
        1:   10:    UserProfile* user3 = createProfile("Charlie", "Programming, Gaming"); // Creating a user profile for Charlie.
call    0 returned 100%
        -:   11:
        1:   12:    profiles[user1->name[0] - 'A'] = user1; // Storing Alice's profile in the profiles array.
        1:   13:    profiles[user2->name[0] - 'A'] = user2; // Storing Bob's profile in the profiles array.
        1:   14:    profiles[user3->name[0] - 'A'] = user3; // Storing Charlie's profile in the profiles array.
        -:   15:
        1:   16:    addFriend(graph, user1, user2); // Adding Bob as a friend of Alice.
call    0 returned 100%
        1:   17:    addFriend(graph, user1, user3); // Adding Charlie as a friend of Alice.
call    0 returned 100%
        -:   18:
        1:   19:    UserProfile* searchedUser = searchUser("Bob", profiles); // Searching for a user with name "Bob".
call    0 returned 100%
        1:   20:    if (searchedUser != NULL) { // Checking if the user is found.
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   21:        printf("User found: %s\n", searchedUser->name); // Printing the name of the found user.
call    0 returned 100%
        -:   22:    } else {
    #####:   23:        printf("User not found.\n"); // Printing a message if the user is not found.
call    0 never executed
        -:   24:    }
        -:   25:
        1:   26:    printf("Friend list of Alice:\n"); // Printing a message.
call    0 returned 100%
        1:   27:    displayFriendList(graph[user1->name[0] - 'A']); // Displaying the friend list of Alice.
call    0 returned 100%
        -:   28:
        1:   29:    freeMemory(profiles, graph); // Freeing allocated memory for user profiles and graph nodes.
call    0 returned 100%
        1:   30:	clock_t end = clock();
call    0 returned 100%
        1:   31:	double time_used = ((double)(start - end)) / CLOCKS_PER_SEC;
        1:   32:	printf("time taken : %f\n" , time_used);
call    0 returned 100%
        1:   33:    return 0; // Returning from the main function.
        -:   34:}

        -:    0:Source:main.c
        -:    1:#include <stdio.h>//to include input output library
        -:    2:#include "main.h"//to include main header file
        -:    3:
function main called 0 returned 0% blocks executed 0%
    #####:    4:int main() {
        -:    5:    struct LinkedList list;//declare a variable list of type struct LinkedList 
    #####:    6:    initLinkedList(&list);//initialize linked list by calling the this function and passing a ponnter to list variable
call    0 never executed
        -:    7:    int numNodes, value;//declare variable to store number and value of node respectively
        -:    8:
        -:    9:    // Ask the user for the number of nodes
    #####:   10:    printf("Enter the number of nodes: ");//print messasge asking user to enteeeer the number of nodes he/she want
call    0 never executed
    #####:   11:    scanf("%d", &numNodes);//reading number of nodes enter by user and storing it in numNodes
call    0 never executed
        -:   12:
        -:   13:    // Ask the user to enter values for each node
    #####:   14:    printf("Enter values for each node:\n");//ask user to enter the value of each node
call    0 never executed
    #####:   15:    for (int i = 0; i < numNodes; i++) {//iterate numNodes times to receive value of each node
branch  0 never executed
branch  1 never executed
    #####:   16:        printf("Node %d value: ", i + 1);//asking to enter values according to current node
call    0 never executed
    #####:   17:        scanf("%d", &value);//reading value enter by user nd store it in variable value
call    0 never executed
    #####:   18:        addNode(&list, value);//add a node with entered value to linked list by calling addNode function
call    0 never executed
        -:   19:    }
        -:   20:
        -:   21:    // Print the sum of values
    #####:   22:    printf("Sum of values: %d\n", sumLinkedList(&list));//calculate sum  of values in linked list by calling it
call    0 never executed
call    1 never executed
        -:   23:
    #####:   24:    return 0;//successful comp of program
        -:   25:}

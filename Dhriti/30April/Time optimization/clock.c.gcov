        -:    0:Source:clock.c
        -:    0:Graph:exetime-clock.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:#include <stdio.h>
        -:    2:#include <time.h>
        -:    3:
    #####:    4:int main() {
        -:    5:
    #####:    6:	int sum = 1;
    #####:    7:	int n = 100000;
        -:    8:    // Start the clock
    #####:    9:    clock_t start = clock();
        -:   10:
        -:   11: 
        -:   12:
        -:   13:    // Code whose time complexity you want to measure
        -:   14:    // For example, let's calculate the sum of first 1000 numbers
        -:   15:    
        -:   16:   /* for (int i = 0; i <= n; i++) {
        -:   17:        sum += i;
        -:   18:    }*/
        -:   19:
    #####:   20:    for(int i=0;i<n;i+=2){
    #####:   21:	    sum +=i;
    #####:   22:	    if(i+1<n){
    #####:   23:		    sum +=i+1;
        -:   24:	    }
        -:   25:    }
        -:   26: 
        -:   27:
        -:   28:    // Stop the clock
    #####:   29:    clock_t end = clock();
        -:   30:
        -:   31: 
        -:   32:
        -:   33:    // Calculate the elapsed time
    #####:   34:    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
        -:   35:
        -:   36: 
        -:   37:
    #####:   38:    printf("Sum of first 1000 numbers: %d\n", sum);
    #####:   39:    printf("Time taken: %f seconds\n", time_taken);
        -:   40:
        -:   41: 
        -:   42:
    #####:   43:    return 0;
        -:   44:}

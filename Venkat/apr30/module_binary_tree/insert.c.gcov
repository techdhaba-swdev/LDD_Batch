        -:    0:Source:insert.c
        -:    1:#include "insert.h"
        -:    2:#include <stdlib.h>
        -:    3:#include <stddef.h>
        -:    4:// Function to insert data into the binary tree
function insert called 17 returned 100% blocks executed 100%
       17:    5:struct Node* insert(struct Node* root, int data) {
       17:    6:    if (root == NULL) return createNode(data); // Create new node if tree is empty
branch  0 taken 41% (fallthrough)
branch  1 taken 59%
call    2 returned 100%
        -:    7:
       10:    8:    if (data < root->data) root->left = insert(root->left, data); // Insert in left subtree for smaller values
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
call    2 returned 100%
        5:    9:    else if (data > root->data) root->right = insert(root->right, data); // Insert in right subtree for larger values
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        -:   10:
       10:   11:    return root; // Return the (potentially modified) root node
        -:   12:}

        -:    0:Source:heapify.c
        -:    1:#include "heapify.h"
        -:    2:#include "swap.h"
        -:    3:
function heapify called 14 returned 100% blocks executed 100%
       14:    4:void heapify(int arr[], int N, int i)
        -:    5:{
       14:    6:    int largest = i;
       14:    7:    int left = 2 * i + 1;
       14:    8:    int right = 2 * i + 2;
        -:    9:
       14:   10:    if (left < N && arr[left] > arr[largest])
branch  0 taken 64% (fallthrough)
branch  1 taken 36%
branch  2 taken 44% (fallthrough)
branch  3 taken 56%
        4:   11:        largest = left;
        -:   12:
       14:   13:    if (right < N && arr[right] > arr[largest])
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
branch  2 taken 60% (fallthrough)
branch  3 taken 40%
        3:   14:        largest = right;
        -:   15:
       14:   16:    if (largest != i) {
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
        5:   17:        swap(&arr[i], &arr[largest]);
call    0 returned 100%
        5:   18:        heapify(arr, N, largest);
call    0 returned 100%
        -:   19:    }
       14:   20:}

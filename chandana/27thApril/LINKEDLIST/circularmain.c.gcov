        -:    0:Source:circularmain.c
        -:    1:#include "clink.h"//Include the header file that contains the structure definition and function prototypes
        -:    2:#include <stdio.h>  // Include standard I/O functions
        -:    3:
function main called 1 returned 100% blocks executed 100%
        1:    4:int main() {
        1:    5:    struct Node* head = NULL;  // Initialize an empty circular linked list
        1:    6:    int values[] = {1, 2, 3, 4, 5}; // Array of values to add to the list
        -:    7:
        -:    8:    // Add nodes to the list
        6:    9:    for (int i = 0; i < sizeof(values) / sizeof(values[0]); i++) {
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        5:   10:        addNode(&head, values[i]);
call    0 returned 100%
        -:   11:    }
        -:   12:
        -:   13:    // Print the list
        1:   14:    printf("Circular Linked List: ");
call    0 returned 100%
        1:   15:    printList(head);
call    0 returned 100%
        -:   16:
        -:   17:    // Calculate the sum of all node values
        1:   18:    int sum = calculateSum(head);
call    0 returned 100%
        1:   19:    printf("Sum of all node values: %d\n", sum);
call    0 returned 100%
        -:   20:
        -:   21:    // Free memory allocated for the list
        1:   22:    freeList(&head);
call    0 returned 100%
        1:   23:    return 0;
        -:   24:}

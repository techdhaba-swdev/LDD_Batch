        -:    0:Source:main.c
        -:    1:#include "bst.h"  // including the bst header file
        -:    2:#include <stdio.h>  // including the input/output header functions
        -:    3:
        -:    4:// Main function 
function main called 1 returned 100% blocks executed 94%
        1:    5:int main() {
        1:    6:    struct node* root = NULL;  // creating a root and initialize as NULL
        1:    7:    root = insert(root, 50); // inserting 50 as root
call    0 returned 100%
        1:    8:    insert(root, 30);        // inserting some nodes 
call    0 returned 100%
        1:    9:    insert(root, 20);
call    0 returned 100%
        1:   10:    insert(root, 40);
call    0 returned 100%
        1:   11:    insert(root, 70);
call    0 returned 100%
        1:   12:    insert(root, 60);
call    0 returned 100%
        1:   13:    insert(root, 80);
call    0 returned 100%
        -:   14:
        1:   15:    printf("In-order traversal of the BST: "); 
call    0 returned 100%
        1:   16:    inorderTraversal(root);  // printing the BTS
call    0 returned 100%
        1:   17:    printf("\n");
call    0 returned 100%
        -:   18:
        1:   19:    int searchKey = 60;     // giving a element to search
        -:   20:    // searching the key and printing the result
        1:   21:    if (search(root, searchKey)) {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   22:        printf("%d is present in the BST.\n", searchKey);
call    0 returned 100%
        -:   23:    } else {
    #####:   24:        printf("%d is not present in the BST.\n", searchKey);
call    0 never executed
        -:   25:    }
        -:   26:
        1:   27:    return 0;  // executing the programe with out errors
        -:   28:}

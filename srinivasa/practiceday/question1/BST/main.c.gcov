        -:    0:Source:main.c
        -:    1:// Including the all required  header files
        -:    2:#include <stdio.h>
        -:    3:#include "bst.h"
        -:    4:#include<time.h>
        -:    5:// Starting the main function
        1:    6:int main() {
        1:    7:    clock_t start = clock();   // starting time of the execution
        1:    8:    struct Node* root = NULL; // creating a root node 
        1:    9:    root = insert(root, 50);  // insering a value to the  root 
        1:   10:    insert(root, 30);         //insering some nodes 
        1:   11:    insert(root, 20);
        1:   12:    insert(root, 40);
        1:   13:    insert(root, 70);
        1:   14:    insert(root, 60);
        1:   15:    insert(root, 80);
        -:   16:    // printing the inorder transversal of the tree
        1:   17:    printf("In-order traversal of the BST: ");
        1:   18:    inOrderTraversal(root);      // calling the function by value 
        1:   19:    printf("\n");
        -:   20:    //performing the delete operation 
        1:   21:    root = deleteNode(root, 20);  // calling the funtion to delete
        -:   22:    // printing the values after deleting the key
        1:   23:    printf("In-order traversal after deleting 20: ");
        1:   24:    inOrderTraversal(root);
        1:   25:    printf("\n");
        -:   26:    // this function is used to search any element in bst
        1:   27:    struct Node* searchResult = search(root, 30);
        1:   28:    if (searchResult != NULL) {   // checking the key is present or not
        1:   29:        printf("Element found  in the BST.\n");
        -:   30:    } else {
    #####:   31:        printf("Element not found in the BST.\n");
        -:   32:    }
        1:   33:    clock_t end = clock();   //end time of the execution
        1:   34:    float time = ((float)(end - start ));
        1:   35:    printf("time taken :%f",time);
        1:   36:    return 0;
        -:   37:}
